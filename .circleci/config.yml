version: 2.1

commands:

  checkout_merge:
    description: "checkout merge branch"
    steps:
      - checkout
  #     - run:
  #         name: Checkout merge branch
  #         command: |
  #           set -ex
  #           BRANCH=$(git rev-parse --abbrev-ref HEAD)
  #           if [[ "$BRANCH" != "master" ]]; then
  #             git fetch --force origin ${CIRCLE_BRANCH}/merge:merged/${CIRCLE_BRANCH}
  #             git checkout "merged/$CIRCLE_BRANCH"
  #           fi

jobs:

  unittest_linux_gpu:
    <<: *binary_common
    machine:
      image: ubuntu-1604-cuda-10.1:201909-23
    resource_class: gpu.medium
    environment:
      image_name: "pytorch/manylinux-cuda101"
    steps:
      - checkout
      - run:
          name: Generate cache key
          # This will refresh cache on Sundays, nightly build should generate new cache.
          command: echo "$(date +"%Y-%U")" > .circleci-weekly
      - restore_cache:

          keys:
            - env-v2-linux-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/linux/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

      - run:
          name: Setup
          command: docker run -t --gpus all -v $PWD:$PWD -w $PWD "${image_name}" .circleci/unittest/linux/scripts/setup_env.sh
      - save_cache:

          key: env-v2-linux-{{ arch }}-py<< parameters.python_version >>-{{ checksum ".circleci/unittest/linux/scripts/environment.yml" }}-{{ checksum ".circleci-weekly" }}

          paths:
            - conda
            - env
      - run:
          name: Install nestedtensor
          command: docker run -t --gpus all -v $PWD:$PWD -w $PWD "${image_name}" .circleci/unittest/linux/scripts/install.sh
      - run:
          name: Run tests
          command: docker run -t --gpus all -v $PWD:$PWD -w $PWD "${image_name}" .circleci/unittest/linux/scripts/run_test.sh
      - run:
          name: Post Process
          command: docker run -t --gpus all -v $PWD:$PWD -w $PWD "${image_name}" .circleci/unittest/linux/scripts/post_process.sh
      - store_test_results:
          path: test-results

  unittest:
    jobs:
      - unittest_linux_gpu:
          cu_version: cu101
          name: unittest_linux_gpu_py3.7
          python_version: '3.7'
      - unittest_linux_gpu:
          cu_version: cu101
          name: unittest_linux_gpu_py3.8
          python_version: '3.8'
